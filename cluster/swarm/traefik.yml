services:
  traefik:
    image: "traefik:v3.4"
    command:
      - "--api.dashboard=true"
      - "--api.insecure=false"
      - "--providers.swarm.endpoints=unix:///var/run/docker.sock" # Default
      # -- "--providers.swarm.network=traefik-public" # This option can be overridden on a per-container basis with the 'traefik.docker.network'
      # - "--traefik.swarm.lbswarm=true" # If you enable this option, Traefik will use the virtual IP provided by docker swarm instead of the containers IPs
      # - "--providers.swarm.constraints=Label(`a.label.name`,`foo`)" $ If none of the container labels match the expression, no route for that container is created.
      # - "--providers.swarm.tls=false/true"
      - "--providers.swarm.exposedbydefault=false"
      - "--entrypoints.http.address=:80"
      - "--entrypoints.https.address=:443"
      # - "--certificatesresolvers.leresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.leresolver.acme.httpchallenge=true"
      - "--certificatesresolvers.leresolver.acme.httpchallenge.entrypoint=http"
      - "--certificatesresolvers.leresolver.acme.email=atajanovkamronbek2003@gmail.com"
      - "--certificatesresolvers.leresolver.acme.storage=/letsencrypt/acme.json"
      - "--log.level=WARN"
      - "--accesslog.filepath=/log/access/access.log"
    ports:
      - "80:80"
      - "443:443"
    # ports:
    # - target: 80
    #   published: 80
    #   protocol: tcp
    #   mode: host
    # - target: 443
    #   published: 443
    #   protocol: tcp
    #   mode: host
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./traefik/acme.json:/letsencrypt/acme.json"
      - "./traefik/traefik.log:/log/access/access.log"
    networks:
      - traefik-public
    secrets:
      - traefik_username
      - traefik_password
    environment:
      TRAEFIK_USERNAME: /run/secrets/traefik_username
      TRAEFIK_PASSWORD: /run/secrets/traefik_password
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.traefik_route.rule=Host(`traefik.kronk.uz`)"
        - "traefik.http.services.traefik_service.loadbalancer.server.port=8080"
        - "traefik.http.routers.traefik_route.entrypoints=http,https"
        - "traefik.http.routers.traefik_route.middlewares=redirect-to-https"
        - "traefik.http.middlewares.traefik_route.redirectscheme.scheme=https"
        - "traefik.http.middlewares.https-redirect.redirectscheme.permanent=true"
        - "traefik.http.routers.traefik-public-https.tls=true"
        - "traefik.http.routers.traefik_route.tls.certresolver=leresolver"
        - "traefik.http.routers.traefik.middlewares=auth"
        - "traefik.http.middlewares.auth.basicauth.users=${TRAEFIK_USERNAME?Variable not set}:${TRAEFIK_PASSWORD?Variable not set}"
      mode: replicated
      replicas: 1
      placement:
        constraints: [ node.role == manager ]
      resources:
        limits:
          cpus: 1.0
          memory: 2G

networks:
  traefik-public:
    external: true

secrets:
  traefik_username:
    external: true
  traefik_password:
    external: true
