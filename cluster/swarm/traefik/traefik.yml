services:
  traefik:
    image: "traefik:v3.4"
    command:
      # Enable the Traefik log, for configurations and errors
      - "--log"
      # Enable the Dashboard and API
      - "--api"
      - "--log.level=ERROR"
      - "--log.filepath=/etc/traefik/traefik.log"
      - "--accesslog.bufferingsize=100"
      - "--providers.swarm.endpoint=unix:///var/run/docker.s"
      - "--providers.docker"
      - "--providers.docker.swarmMode=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.network=traefik-public"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.letsencrypt_resolver.acme.httpchallenge=true"
      - "--certificatesresolvers.letsencrypt_resolver.acme.email=atajanovkamronbek2003@gmail.com"
      - "--certificatesresolvers.letsencrypt_resolver.acme.storage=/letsencrypt/acme.json"
      - "--certificatesresolvers.letsencrypt_resolver.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.le.acme.tlschallenge=true"

      # SMDM entrypoints additional services
      - --entrypoints.portainer.address=:9443

      # adjust responding timeouts (large uploads) - values in seconds, 0 means no limit
      # readTimeout may cause upload aborts
      - --entrypoints.https.transport.respondingTimeouts.readTimeout=600
      - --entrypoints.https.transport.respondingTimeouts.writeTimeout=0
      - --entrypoints.https.transport.respondingTimeouts.idleTimeout=0

      # enable http3 support - be sure to open udp port in firewall!
      - --entrypoints.https.http3
    ports:
      - "80:80"
      - "8080:8080"
      - "9443:9443"
      - "443:443"
      # Host mode is essential to work with IPv6
      # Listen on port 80, default for HTTP, necessary to redirect to HTTPS
      - target: 80
        published: 80
        mode: host
        protocol: tcp
      # Listen on port 443, default for HTTPS
      - target: 443
        published: 443
        mode: host
        protocol: tcp
    networks:
      - traefik-public
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "./traefik/acme.json:/letsencrypt/acme.json"
      - "./traefik/traefik.log:/etc/traefik/traefik.log"
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          memory: 512M
        reservations:
          cpus: 0.25
          memory: 256M
      update_config:
        order: stop-first
        parallelism: 1
      labels:
        - "traefik.enable=true"
        - "traefik.docker.network=traefik-public"
        - "traefik.http.routers.traefik_route.rule=Host(`traefik.kronk.uz`)"
        - "traefik.http.services.traefik_service.loadbalancer.server.port=8080"
        - "traefik.http.routers.traefik_route.entrypoints=web,websecure"
        - "traefik.http.routers.traefik_route.middlewares=redirect-to-https"
        - "traefik.http.middlewares.traefik_route.redirectscheme.scheme=https"
        - "traefik.http.middlewares.https-redirect.redirectscheme.permanent=true"
        - "traefik.http.routers.traefik_route.service=api@internal"
        - "traefik.http.routers.traefik_route.tls.certresolver=letsencrypt_resolver"
        - "traefik.http.routers.traefik.middlewares=traefikauth"
        - "traefik.http.middlewares.traefikauth.basicauth.users=kamronbek:@kamronbek2003"

networks:
  traefik-public:
    external: true